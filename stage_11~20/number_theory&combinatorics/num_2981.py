# 2981 검문
# 문제
# 트럭을 타고 이동하던 상근이는 경찰의 검문을 받게 되었다. 경찰은 상근이가 운반하던 화물을 하나하나 모두 확인할 것이기 때문에, 
# 검문하는데 엄청나게 오랜 시간이 걸린다.

# 상근이는 시간을 때우기 위해서 수학 게임을 하기로 했다.

# 먼저 근처에 보이는 숫자 N개를 종이에 적는다. 그 다음, 종이에 적은 수를 M으로 나누었을 때, 나머지가 모두 같게 되는 M을 모두 찾으려고 한다. 
# M은 1보다 커야 한다.

# N개의 수가 주어졌을 때, 가능한 M을 모두 찾는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 종이에 적은 수의 개수 N이 주어진다. (2 ≤ N ≤ 100)

# 다음 줄부터 N개 줄에는 종이에 적은 수가 하나씩 주어진다. 이 수는 모두 1보다 크거나 같고, 1,000,000,000보다 작거나 같은 자연수이다. 
# 같은 수가 두 번 이상 주어지지 않는다.

# 항상 M이 하나 이상 존재하는 경우만 입력으로 주어진다.

# 출력
# 첫째 줄에 가능한 M을 공백으로 구분하여 모두 출력한다. 이때, M은 증가하는 순서이어야 한다.

# 예제 입력 1 
# 3
# 6
# 34
# 38
# 예제 출력 1 
# 2 4

# 예제 입력 2 
# 5
# 5
# 17
# 23
# 14
# 83
# 예제 출력 2 
# 3

from math import gcd

N = int(input())
memo_list = []
m_list = []
gcd_num = 0

for i in range(N): # 메모리스트에 숫자를 넣는다
    num = int(input()) 
    memo_list.append(num)

memo_list.sort() # 메모리스트의 숫자를 정렬
for j in range(1,N):
    m_list.append(memo_list[j] - memo_list[j-1]) # 두 구성요소의 차를 구해서 리스트에 넣는다.

while len(m_list) != 1: # 리스트 안의 숫자가 1개가 될 때까지 반복
    for k in range(1,len(m_list)):
        m_list[k-1] = gcd(m_list[k], m_list[k-1]) # 리스트 안의 숫자들을 하나씩 없애고 최소공배수로 채움
gcd_num = m_list[0]

for i in range(2, int((gcd_num)**0.5+1)): # 에라토스테네스의 체
    if gcd_num % i == 0:
            m_list.append(i)
            m_list.append(gcd_num // i)


print(*sorted(list(set(m_list)))) # 리스트의 중복을 없애고 정렬         

# 숫자가 하나가 남을 때까지 최대공약수를 구함
# 현재 230116 에서의 나의 실력으로는 전혀 풀 수 없었다. 시간복잡도를 줄이는 방법을 얼른 배워야겠다.


