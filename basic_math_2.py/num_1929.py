# 소수 구하기
# 문제
# M이상 N이하의 소수를 모두 출력하는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 자연수 M과 N이 빈 칸을 사이에 두고 주어진다. (1 ≤ M ≤ N ≤ 1,000,000) M이상 N이하의 소수가 하나 이상 있는 입력만 주어진다.

# 출력
# 한 줄에 하나씩, 증가하는 순서대로 소수를 출력한다.

# import sys
# M, N = map(int, sys.stdin.readline().split())
# lst = []


# for i in range(M, N+1): # 자연수 M부터 N까지 출력
#     cnt = 0 # cnt를 초기화 시켜줌
#     if i == 1: # 1일 때는 특수하므로 따로 소수가 아니라고 표시
#         cnt +=1
#     elif i == 2: # 2일 때는 소수라고 표시
#         True

#     for j in range(2, i): # j를 2부터 i-1까지 반복
#         if i % j == 0: # 소수는 1과 자기 자신을 제외한 모든 수로 나누어지지 않는다. 
#             cnt += 1 # 나누어졌을 경우 
#             break

#     if cnt == 0: # 1과 자기 자신을 제외한 모든 수로 나누어지지 않았을 경우
#         print(i) # 리스트에 추가

M, N = map(int,input().split())

for i in range(M, N+1):
    if i == 1: # 1은 소수가 아니므로 제외
        continue
    for j in range(2,int(i**0.5)+1):
        if i % j == 0: # 약수가 존재하므로 소수가 아님
            break   #더이상 검사할 필요가 없으므로 멈춤
    else:
        print(i)

# 에라토스테네스의 체를 사용하면 모든 숫자를 검사할 필요가 없으므로 (검사해야하는 범위가 클수록 효과적) 시간 복잡도도 감소한다.
# O(N) -> O(N^(1/2))
# 시간복잡도를 조금 더 고려하면서 문제를 풀자

# 예제 입력 1 
# 3 16
# 예제 출력 1 
# 3
# 5
# 7
# 11
# 13